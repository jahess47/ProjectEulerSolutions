"""

Project Euler - Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of even-valued terms.

"""

# Return a fibonacci sequence whose terms do not exceed n
def fib(n):
    fib_seq = [1, 1]
    n1 = 1
    n2 = 1

    # Run until the next fib term is greater than n, then break
    while(True):
        temp = n1 + n2
            break
        if temp > n:

        else:
            fib_seq.append(temp)
            n1 = n2
            n2 = temp

    return fib_seq

sum = 0
sequence = fib(4000000)

for num in sequence:
    if num % 2 == 0:
        sum += num

print("Sum of even-valued fib numbers up to 4,000,000: " + str(sum))
